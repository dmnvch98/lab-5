{"version":3,"sources":["Components/Card.js","Components/Filter.js","Components/NoArcticles.js","Components/LoaderSpinner.js","App.js","reportWebVitals.js","index.js"],"names":["Card","card","className","title","src","urlToImage","alt","width","height","description","href","url","target","Filter","retrieveNews","setTitle","setSource","loadMore","setIsTopNews","useState","sources","setSources","useEffect","sourcesURL","APIKey","fetch","then","res","json","data","retrieveSources","htmlFor","type","onKeyDown","event","key","trim","onChange","value","name","map","item","id","onClick","disabled","NoArticles","LoaderSpinner","Loader","active","App","news","setNews","page","setPage","source","isTopNews","isFetching","setIsFetching","retrieveTopNews","a","newsUrl","articles","window","scrollTo","arrayNews","forEach","push","Number","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a9131e95.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function Card({card}) {\n    return (\n        <div className=\"news-cards\">\n            <div className=\"card\">\n                <div className=\"title\">\n                    <h3> {card.title} </h3>\n                </div>\n\n                <div className=\"img\">\n                    <img src={card.urlToImage} alt=\"\"\n                         width={580} height={300}/>\n                </div>\n\n                <div className=\"description\">\n                    <p>\n                        {card.description}\n                    </p>\n                </div>\n                <div className=\"rmb\">\n                    <a href={card.url} target=\"_blank\">\n                        <button className=\"read-more-btn btn\">Read more</button>\n                    </a>\n                </div>\n            </div>\n            <br/>\n        </div>\n    )\n}\n\n","import React, {useState, useEffect} from 'react';\nimport {APIKey} from \"../App\";\n\nexport default function Filter({retrieveNews, setTitle, setSource, loadMore, title, setIsTopNews}) {\n\n    let [sources, setSources] = useState([]);\n\n    function retrieveSources() {\n        let sourcesURL = `https://newsapi.org/v2/sources?apiKey=${APIKey}&language=en`;\n\n        fetch(sourcesURL).then((res) => {\n            return res.json();\n        }).then((data) => {\n            setSources(data.sources)\n        });\n    }\n\n    const handleKeyDown = (event) => {\n        if (event.key === 'Enter' && title.trim()) {\n            retrieveNews();\n        }\n    }\n\n    useEffect(() => {\n        retrieveSources()\n    }, []);\n\n    return (\n        <div className=\"search-form\">\n            <div className=\"label-input label\">\n                <label htmlFor=\"input\">Keyword*</label>\n            </div>\n\n            <div className=\"input\">\n                <input type=\"text\" className=\"input\" onKeyDown={handleKeyDown}\n                       onChange={event => setTitle(event.target.value)}/>\n            </div>\n\n            <div className=\"label-sources\">\n                <label htmlFor=\"sources\">Source</label>\n            </div>\n\n            <div className=\"menu\">\n                <select name=\"sources\" className=\"sources\" onChange={event => setSource(event.target.value)}>\n                    <option value=\"\" className=\"all-option\">All</option>\n                    {sources.map((item) => (\n                        <option value={item.id}> {item.name} </option>\n                    ))}\n                </select>\n            </div>\n\n            <div className=\"search\">\n                <button className=\"search-btn btn\" onClick={retrieveNews} disabled={!title || !title.trim()}>\n                    Search\n                </button>\n            </div>\n\n            <div className=\"load\">\n                <button className=\"load-more-btn btn\" onClick={loadMore}> Load more</button>\n            </div>\n\n        </div>\n    )\n}","import React from 'react';\n\nexport default function NoArticles() {\n    return (\n        <div className=\"no-articles\">\n            <h1>There are no articles matching your request</h1>\n        </div>\n    )\n}","import React from \"react\";\nimport {Loader} from 'semantic-ui-react'\n\nexport default function LoaderSpinner() {\n    return (\n        <div className=\"loaderSpinner\">\n            <Loader active/>\n        </div>\n    )\n}","import React, {useEffect, useState} from 'react';\nimport Card from \"./Components/Card\";\nimport Filter from \"./Components/Filter\";\nimport NoArticles from \"./Components/NoArcticles\";\nimport LoaderSpinner from \"./Components/LoaderSpinner\";\n\nexport const APIKey = \"1af9413564284f8bacb7eb94c4a392c8\";\n\nfunction App() {\n    let [news, setNews] = useState([]);\n    let [title, setTitle] = useState('');\n    let [page, setPage] = useState('2');\n    let [source, setSource] = useState('');\n    const [isTopNews, setIsTopNews] = useState(true);\n    const [isFetching, setIsFetching] = useState(false);\n\n    function retrieveNews() {\n        let newsUrl = `https://newsapi.org/v2/everything?q=${title}&apiKey=${APIKey}&pageSize=5&page=1&sources=${source}`;\n        fetch(newsUrl).then((res) => {\n            return res.json();\n        }).then((data) => {\n            setNews(data.articles);\n            setIsTopNews(false);\n            window.scrollTo(0, 0);\n        })\n    }\n\n    function loadMore() {\n        if (page < 9) {\n            let newsUrl = isTopNews\n                ? `https://newsapi.org/v2/top-headlines?country=us&apiKey=${APIKey}&pageSize=5&page=${page}`\n                : `https://newsapi.org/v2/everything?q=${title}&apiKey=${APIKey}&pageSize=5&page=${page}&sources=${source}`;\n            fetch(newsUrl).then((res) => {\n                return res.json();\n            }).then((data) => {\n                let arrayNews = news;\n                data.articles.forEach(item => arrayNews.push(item));\n                setNews(arrayNews);\n                setPage(Number(page) + 1);\n            })\n        }\n        return 0;\n    }\n\n    async function retrieveTopNews() {\n        let newsUrl = `https://newsapi.org/v2/top-headlines?country=us&apiKey=${APIKey}&pageSize=5`;\n\n        setIsFetching(true);\n        const data = await fetch(newsUrl).then((res) => res.json())\n        setNews(data.articles);\n        setIsFetching(false);\n        setIsTopNews(true);\n    }\n\n    useEffect(() => {\n            (\n                async () => {\n                    setIsFetching(true);\n                    await retrieveTopNews();\n                    setIsFetching(false);\n                }\n            )();\n        }, []\n    );\n\n\n    return <div className=\"wrapper\">\n        <Filter setTitle={setTitle} title={title} retrieveNews={retrieveNews} loadMore={loadMore} setSource={setSource}\n                setIsTopNews={setIsTopNews}/>\n        <div>\n            {news.length ? news.map(card => (\n                <Card card={card}/>\n            )) : (isFetching ? <LoaderSpinner/> : <NoArticles/>)}\n        </div>\n    </div>\n}\n\nexport default App;\n\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}